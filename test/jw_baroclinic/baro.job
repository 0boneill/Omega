#!/bin/tcsh -f
#SBATCH --job-name baro
#SBATCH --account=FY139209
#SBATCH -N 8
#SBATCH --time=1:00:00



#
#  set paths to source code, build directory and run directory
#
set wdir =  ~/scratch1/preqx
set HOMME = ~/codes/homme                     
set input = $HOMME/test/jw_baroclinic       
set vdir = $HOMME/test/vcoord
set bld = $wdir/bld
#set MACH = $HOMME/cmake/machineFiles/redsky.cmake
set MACH = $HOMME/cmake/machineFiles/titan.cmake


#
#  mpi run command
#
set NCPU = 0
setenv OMP_NUM_THREADS 4

if ( ${?SLURM_NNODES} ) then
    set NCPU = $SLURM_NNODES
    @ NCPU *= 8
    @ NCPU /= $OMP_NUM_THREADS
endif
if ( ${?PBS_NUM_NODES} ) then
    set NCPU = $PBS_NUM_NODES
    @ NCPU *= $PBS_NUM_PPN
    @ NCPU /= $OMP_NUM_THREADS
endif

echo using NCPU=$NCPU   NTHREADS=$OMP_NUM_THREADS
#set mpirun = "mpirun -loadbalance -np $NCPU"
set mpirun = "aprun -n $NCPU -d $OMP_NUM_THREADS "



# Test case: JW Baroclinic instability 
# default is no rotation, with u perturbation
set test_case = 'jw_baroclinic'
set u_perturb = 1
set rotate = 0

set ne = 16       # horizontal resolution   16,30,60,120,240
set nlev=30       # vertical resolution
set qsize = 4     # number of passive tracers

# simulate CAM5:
#set nlev=30
#set qsize=25

# simulate future DOE version:
# todo: generate cam60 level files
#set nlev=60
#set qsize=50



#
#  BUILD PREQX
#
mkdir -p $bld
cd $bld
set exe = $bld/src/preqx/preqx
set build = 0  # set to 1 to force build
set conf = 0   # set to 1 to force configure
if ( ! -f CMakeCache.txt) set conf = 1   # no cmake files.  force configure
if ( $conf == 1 ) then
   rm -rf CMakeFiles CMakeCache.txt src
   #rm -rf utils/pio  utils/timing utils/cprnc   # may also need to do this
   cmake -C $MACH -DPREQX_PLEV=$nlev -DPREQX_NP=4  -DPREQX_USE_ENERGY=TRUE  $HOMME
   make -j4 clean
endif
if ( ! -f $exe) set build = 1   # no exe, force build
if ( $build == 1 ) then
   make -j4 preqx
   if ($status) exit
endif




#
#  run each different resolution in a different directory
#
set name = jw-ne${ne}-nlev${nlev}-qsize${qsize}
set run = $wdir/$name


if ( $ne == 16 ) then
   set tstep=600
   set rsplit = 3
   set hypervis_subcycle = 3
   set nu=7e15
endif
if ( $ne == 30 ) then
   set tstep=300
   set rsplit = 3
   set hypervis_subcycle = 3
   set nu=1e15
endif
if ( $ne == 60 ) then
   set tstep=150
   set rsplit = 3
   set hypervis_subcycle = 4
   set nu=1e14
endif
if ( $ne == 120 ) then
   set tstep=75
   set rsplit = 3
   set hypervis_subcycle = 4
   set nu=1e13
endif
if ( $ne == 240 ) then
   set tstep=40
   set rsplit = 3
   set hypervis_subcycle = 4
   set nu=1e12
endif



# diagnostics printed to stdout
set sfreq = 8   # number of hours
@ sfreq *= 3600
@ sfreq /= $tstep




# copy vertical level files to run directory
mkdir -p $run/movies
cd $run
cp $vdir/cam*$nlev.ascii  $run

#  create a new namelist from original ne16 template:
sed s/ne=.\*/ne=$ne/ $input/jw_baroclinic.nl |\
sed s/tstep=.\*/tstep=$tstep/ | \
sed s/rsplit=.\*/rsplit=$rsplit/ | \
sed s/nu=.\*/nu=$nu/ | \
sed s/nu_div=.\*/nu_div=$nu/ | \
sed s/nu_p=.\*/nu_p=$nu/ | \
sed s/nu_q=.\*/nu_q=$nu/ | \
sed s/NThreads.\*/NThreads=$OMP_NUM_THREADS/ | \
sed s/statefreq.\*/statefreq=$sfreq/ |\
sed s/u_perturb.\*/"u_perturb = $u_perturb"/   |\
sed s/rotate_grid.\*/"rotate_grid = $rotate"/  |\
sed s/qsize.\*/"qsize = $qsize"/  |\
sed s/hypervis_subcycle=.\*/"hypervis_subcycle = $hypervis_subcycle "/ > input.nl


date
$mpirun $exe  < input.nl
date

