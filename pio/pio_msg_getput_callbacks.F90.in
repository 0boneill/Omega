#define TYPETEXT 100
#define TYPEREAL 101
#define TYPEDOUBLE 102
#define TYPEINT 103


subroutine string_handler_for_getvar1(file, varid, index, strlen)
  use pio, only : file_desc_t, pio_get_var
  type(file_desc_t) :: file
  integer, intent(in) :: varid, index(:), strlen
  character(len=strlen) :: str

  ierr = pio_get_var(file, varid, index, str )  

end subroutine string_handler_for_getvar1

subroutine string_handler_for_getvar_0d(file, varid, strlen)
  use pio, only : file_desc_t, pio_get_var
  type(file_desc_t) :: file
  integer, intent(in) :: varid, strlen
  character(len=strlen) :: str

  ierr = pio_get_var(file, varid, str )  

end subroutine string_handler_for_getvar_0d
  

subroutine getvar1_handler(ios)
  use pio, only : iosystem_desc_t, file_desc_t, pio_get_var
  use pio_kinds, only : i4, r4, r8, pio_offset
  use pio_msg_mod, only : lookupfile
  use pio_support, only : debugAsync, piodie
  implicit none
  include 'mpif.h' !_EXTERNAL
  type(iosystem_desc_t), intent(inout) :: ios
  type(file_desc_t), pointer :: file
  integer :: fh, varid, ierr, itype, strlen, size_index
  integer, allocatable :: index(:)

  real(r4) :: rvar
  real(r8) :: dvar
  integer(i4) :: ivar

  call mpi_bcast(fh, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  call mpi_bcast(varid, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  call mpi_bcast(size_index, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  allocate(index(size_index))
  call mpi_bcast(index, size_index, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  call mpi_bcast(itype, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  file=> lookupfile(fh)
  
  select case(itype)
  case (TYPETEXT)
     call mpi_bcast(strlen, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
     if(strlen>512) then
        call piodie(__FILE__,__LINE__)
     end if
     call string_handler_for_getvar1(file, varid, index, strlen)
  case (TYPEREAL)
     ierr = pio_get_var(file, varid, index, rvar)
  case (TYPEDOUBLE)
     ierr = pio_get_var(file, varid, index, dvar)
  case (TYPEINT)
     ierr = pio_get_var(file, varid, index, ivar)
  end select
  deallocate(index)
end subroutine getvar1_handler

subroutine getvar_0d_handler (ios)
  use pio, only : iosystem_desc_t, file_desc_t, pio_get_var
  use pio_kinds, only : i4, r4, r8, pio_offset
  use pio_msg_mod, only : lookupfile
  use pio_support, only : debugAsync, piodie
  implicit none
  include 'mpif.h' !_EXTERNAL
  type(iosystem_desc_t), intent(inout) :: ios
  type(file_desc_t), pointer :: file
  integer :: fh, varid, ierr, itype, strlen, dimcnt

  real(r4) :: rvar
  real(r8) :: dvar
  integer(i4) :: ivar
  
  call mpi_bcast(fh, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  call mpi_bcast(varid, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  call mpi_bcast(itype, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)

  file=> lookupfile(fh)
  
  select case(itype)
  case (TYPETEXT)
     call mpi_bcast(strlen, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
     if(strlen>512) then
        call piodie(__FILE__,__LINE__)
     end if
     call string_handler_for_getvar_0d (file, varid, strlen)
  case (TYPEREAL)
     ierr = pio_get_var(file, varid, rvar)
  case (TYPEDOUBLE)
     ierr = pio_get_var(file, varid, dvar)
  case (TYPEINT)
     ierr = pio_get_var(file, varid, ivar)
  end select
  
end subroutine getvar_0d_handler

#ifdef DOTHIS
! DIMS 1,2,3,4,5
subroutine getvar_{DIMS}d_handler (ios)
  use pio, only : iosystem_desc_t, file_desc_t, pio_get_var
  use pio_kinds, only : i4, r4, r8, pio_offset
  use pio_msg_mod, only : lookupfile
  use pio_support, only : debugAsync, piodie
  implicit none
  include 'mpif.h' !_EXTERNAL
  type(iosystem_desc_t), intent(inout) :: ios
  type(file_desc_t), pointer :: file
  integer :: fh, varid, ierr, itype, strlen, dimcnt
  integer, allocatable :: dims(:)

  real(r4), allocatable    :: rvar{DIMSTR}
  real(r8), allocatable    :: dvar{DIMSTR}
  integer(i4), allocatable :: ivar{DIMSTR}
  
  call mpi_bcast(fh, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  call mpi_bcast(varid, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
  call mpi_bcast(itype, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
#if ({DIMS} > 0) 
  allocate(dims{DIMS})
  call mpi_bcast(dims, {DIMS}, mpi_integer, ios%compmaster, ios%intercomm, ierr)
#endif     

  file=> lookupfile(fh)
  
  select case(itype)
  case (TYPETEXT)
     call mpi_bcast(strlen, 1, mpi_integer, ios%compmaster, ios%intercomm, ierr)
     if(strlen>512) then
        call piodie(__FILE__,__LINE__)
     end if
     call string_handler_for_getvar_{DIMS}d (file, varid, strlen)
  case (TYPEREAL)
     ierr = pio_get_var(file, varid, index, rvar)
  case (TYPEDOUBLE)
     ierr = pio_get_var(file, varid, index, dvar)  case (TYPEINT)
     ierr = pio_get_var(file, varid, index, ivar)
  end select
  
end subroutine getvar_{DIMS}d_handler
#endif
