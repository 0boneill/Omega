#define __PIO_FILE__ "pionfput_mod.F90"
!>
!! @file 
!! $Revision$
!! $LastChangedDate$
!! @brief Write Routines for non-decomposed NetCDF data.
!<
module pionfput_mod
#ifdef TIMING
  use perf_mod, only : t_startf, t_stopf      ! _EXTERNAL
#endif
  use iso_c_binding
  use pio_kinds, only: i4,r4,r8,pio_offset
  use pio_types, only : file_desc_t, iosystem_desc_t, var_desc_t, &
	pio_iotype_pbinary, pio_iotype_binary, pio_iotype_direct_pbinary, &
	pio_iotype_netcdf, pio_iotype_pnetcdf, pio_iotype_netcdf4p, pio_iotype_netcdf4c, &
	pio_noerr

  use pio_support, only : Debug, DebugIO, piodie   
  implicit none
  private

!>
!! @defgroup PIO_put_var PIO_put_var
!! @brief Writes netcdf metadata to a file
!! @details The put_var interface is provided as a simplified interface to
!!  write variables to a netcdf format file.   
!! @warning Although this is a collective call the variable is written from the 
!!  root IO task, no consistancy check is made with data passed on other tasks.
!! 
!<
  public :: put_var
  interface put_var
     !  DIMS 0,1,2,3,4,5
     module procedure put_var_{DIMS}d_{TYPE}, put_var_vdesc_{DIMS}d_{TYPE}
     !  DIMS 1,2,3,4,5
     module procedure put_vara_{DIMS}d_{TYPE}, put_vara_vdesc_{DIMS}d_{TYPE}
     module procedure put_var1_{TYPE}, put_var1_vdesc_{TYPE}
  end interface
contains

!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param varid : The netcdf variable identifier
!! @param index : 
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var1_text (File,varid, index, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid, index(:)
    character(len=*), intent(in) :: ival


#ifdef TIMING
    call t_startf("pio_put_var1_text")
#endif 
    ierr=PIO_NOERR


#ifdef TIMING
    call t_stopf("pio_put_var1_text")
#endif 
  end function put_var1_text
! TYPE int,real,double
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param varid : The netcdf variable identifier
!! @param index : 
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var1_{TYPE} (File,varid, index, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid, index(:)
    {VTYPE}, intent(in) :: ival

#ifdef TIMING
    call t_startf("pio_put_var1_{TYPE}")
#endif 
    ierr=PIO_NOERR


#ifdef TIMING
    call t_stopf("pio_put_var1_{TYPE}")
#endif 
  end function put_var1_{TYPE}

!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param vardesc @copydoc var_desc_t
!! @param start : 
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var1_vdesc_{TYPE} (File,vardesc, start, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    type(var_desc_t), intent(in) :: vardesc
    integer, intent(in) ::  start(:)
    {VTYPE}, intent(in) :: ival

    ierr = put_var1_{TYPE} (File, vardesc%varid, start, ival)
  end function put_var1_vdesc_{TYPE}

!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param File : A file handle returne from \ref PIO_openfile or \ref PIO_createfile.
!! @param varid : The netcdf variable identifier
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var_0d_text (File,varid, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid
    character(len=*), intent(in) :: ival
    character, allocatable :: cval(:)
    integer :: clen, i
    interface
       integer(C_INT) function PIOc_put_var_text(ncid, varid, op) &
            bind(C,name="PIOc_put_var_text")
         use iso_c_binding
         integer(C_INT), intent(in), value :: ncid
         integer(C_INT), intent(in), value :: varid
         character(C_CHAR) :: op
       end function PIOc_put_var_text
    end interface

!   This manipulation is required to convert the fortran string to
!   a c character array with all trailing space set to null
!
    clen = len(ival)
    allocate(cval(clen))
    cval = C_NULL_CHAR
    do i=1,len_trim(ival)
       cval(i) = ival(i:i)
    end do
    ierr = PIOc_put_var_text(file%fh, varid,  cval(1))
    deallocate(cval)
  end function put_var_0d_text
! DIMS 1,2,3,4,5
! TYPE text
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param File : A file handle returne from \ref PIO_openfile or \ref PIO_createfile.
!! @param varid : The netcdf variable identifier
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var_{DIMS}d_text (File,varid, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid
    character(len=*), intent(in) :: ival{DIMSTR}
    character, allocatable :: cval(:)
    integer :: clen, csize, i, j, k, m, n, q, sd({DIMS}), cinc
    interface
       integer(C_INT) function PIOc_put_var_text(ncid, varid, op) &
            bind(C,name="PIOc_put_var_text")
         use iso_c_binding
         integer(C_INT), intent(in), value :: ncid
         integer(C_INT), intent(in), value :: varid
         character(C_CHAR) :: op
       end function PIOc_put_var_text
    end interface

!   This manipulation is required to convert the fortran string to
!   a c character array with all trailing space set to null
!
    ierr = PIO_NOERR
    clen = len(ival)
    sd = size(ival)
    allocate(cval(clen*product(sd(1:{DIMS}))))
    cval = C_NULL_CHAR
    cinc = 0
#if {DIMS} == 1
    do j=1,sd(1)
       do i=1,len_trim(ival(j))
          cval(i+cinc*clen) = ival(j)(i:i)
       end do
       cinc = cinc+1
    enddo
#endif
#if {DIMS} == 2
    do k=1,sd(2)
       do j=1,sd(1)
          do i=1,len_trim(ival(j,k))
             cval(i+cinc*clen) = ival(j,k)(i:i)
          end do
          cinc = cinc+1
       enddo
    enddo
#endif
#if {DIMS} == 3
    do m=1,sd(3)
       do k=1,sd(2)
          do j=1,sd(1)
             do i=1,len_trim(ival(j,k,m))
                cval(i+cinc*clen) = ival(j,k,m)(i:i)
             end do
             cinc = cinc+1
          enddo
       enddo
    enddo
#endif
#if {DIMS} == 4
    do n=1,sd(4)
       do m=1,sd(3)
          do k=1,sd(2)
             do j=1,sd(1)
                do i=1,len_trim(ival(j,k,m,n))
                   cval(i+cinc*clen) = ival(j,k,m,n)(i:i)
                end do
                cinc = cinc+1
             enddo
          enddo
       enddo
    enddo
#endif
#if {DIMS} == 5
    do q=1,sd(5)
       do n=1,sd(4)
          do m=1,sd(3)
             do k=1,sd(2)
                do j=1,sd(1)
                   do i=1,len_trim(ival(j,k,m,n,q))
                      cval(i+cinc*clen) = ival(j,k,m,n,q)(i:i)
                   end do
                   cinc = cinc+1
                enddo
             enddo
          enddo
       enddo
    enddo
#endif
    ierr = PIOc_put_var_text(file%fh, varid,  cval(1))
    deallocate(cval)


  end function put_var_{DIMS}d_text

! DIMS 1,2,3,4,5
! TYPE int,real,double
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param File : A file handle returne from \ref PIO_openfile or \ref PIO_createfile.
!! @param varid : The netcdf variable identifier
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var_{DIMS}d_{TYPE} (File,varid, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid
    {VTYPE}, intent(in) :: ival{DIMSTR}

    ierr=PIO_NOERR


  end function put_var_{DIMS}d_{TYPE}

! TYPE int,real,double
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param File : A file handle returne from \ref PIO_openfile or \ref PIO_createfile.
!! @param varid : The netcdf variable identifier
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var_0d_{TYPE} (File,varid, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid
    {VTYPE}, intent(in) :: ival


    ierr=PIO_NOERR


#ifdef TIMING
    call t_startf("pio_put_var_0d_{TYPE}")
#endif 


#ifdef TIMING
    call t_stopf("pio_put_var_0d_{TYPE}")
#endif 
  end function put_var_0d_{TYPE}

! DIMS 0,1,2,3,4,5
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param vardesc @copydoc var_desc_t
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_var_vdesc_{DIMS}d_{TYPE} (File, vardesc, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    type(var_desc_t) , intent(in) :: vardesc
    {VTYPE}, intent(in) :: ival{DIMSTR}
    integer :: iotype

    ierr = put_var_{DIMS}d_{TYPE} (File, vardesc%varid, ival)
  end function put_var_vdesc_{DIMS}d_{TYPE}

! DIMS 1,2,3,4,5
! TYPE text
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param varid : The netcdf variable identifier
!! @param start :
!! @param count :
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_vara_{DIMS}d_text (File,varid, start, count, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid, start(:), count(:)
    character(len=*), intent(in) :: ival{DIMSTR}

#ifdef TIMING
    call t_startf("pio_put_vara_{DIMS}d_text")
#endif 


#ifdef TIMING
    call t_stopf("pio_put_vara_{DIMS}d_{TYPE}")
#endif 
  end function put_vara_{DIMS}d_text
! TYPE int,real,double
! DIMS 1,2,3,4,5
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf attribute to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param varid : The netcdf variable identifier
!! @param start :
!! @param count :
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_vara_{DIMS}d_{TYPE} (File,varid, start, count, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    integer, intent(in) :: varid, start(:), count(:)

    {VTYPE}, intent(in) :: ival{DIMSTR}

#ifdef TIMING
    call t_startf("pio_put_vara_{DIMS}d_{TYPE}")
#endif 

#ifdef TIMING
    call t_stopf("pio_put_vara_{DIMS}d_{TYPE}")
#endif 
  end function put_vara_{DIMS}d_{TYPE}

! DIMS 1,2,3,4,5
!>
!! @public
!! @ingroup PIO_put_var
!! @brief Writes an netcdf variable to a file
!! @details
!! @param File @copydoc file_desc_t
!! @param vardesc @copydoc var_desc_t
!! @param start : 
!! @param count : 
!! @param ival : The value for the netcdf metadata
!! @retval ierr @copydoc error_return
!<
  integer function put_vara_vdesc_{DIMS}d_{TYPE} (File,vardesc, start, count, ival) result(ierr)
    type (File_desc_t), intent(inout) :: File
    type(var_desc_t), intent(in) :: vardesc
    integer, intent(in) ::  start(:), count(:)
    {VTYPE}, intent(in) :: ival{DIMSTR}

    ierr = put_vara_{DIMS}d_{TYPE} (File, vardesc%varid, start, count, ival)


  end function put_vara_vdesc_{DIMS}d_{TYPE}
end module pionfput_mod
