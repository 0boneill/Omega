# Relevant Directories within the HOMME repository
# holding source files needed for building the library
# and executable sweqx.

SET(SRC_BASE    ${CMAKE_CURRENT_SOURCE_DIR}/..)
SET(SRC_SHARE   ${SRC_BASE}/share)
SET(SRC_UTILS   ${SRC_BASE}/../utils/csm_share)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}
                    ${PIO_INCLUDE_DIRS}
                    ${TIMING_INCLUDE_DIRS}
                    ${CMAKE_CURRENT_SOURCE_DIR})

CONFIGURE_FILE(config.h.cmake.in config.h)
ADD_DEFINITIONS(-DHAVE_CONFIG_H)

SET(SRCS_SWDGX
    ${SRC_BASE}/jrio.c
    ${SRC_SHARE}/kinds.F90
    ${SRC_SHARE}/dimensions_mod.F90
    ${SRC_SHARE}/control_mod.F90
    ${SRC_SHARE}/physical_constants.F90
    ${SRC_SHARE}/quadrature_mod.F90
    ${SRC_SHARE}/parallel_mod.F90
    ${SRC_SHARE}/hybrid_mod.F90
    ${SRC_SHARE}/reduction_mod.F90
    ${SRC_SHARE}/params_mod.F90
    ${SRC_SHARE}/gridgraph_mod.F90
    ${SRC_SHARE}/coordinate_systems_mod.F90
    ${SRC_SHARE}/edge_mod.F90
    ${SRC_SHARE}/element_mod.F90
    ${SRC_SHARE}/global_norms_mod.F90
    ${SRC_SHARE}/thread_mod.F90
    ${SRC_SHARE}/ll_mod.F90
    ${SRC_SHARE}/metagraph_mod.F90
    ${SRC_SHARE}/schedule_mod.F90
    ${SRC_SHARE}/bndry_mod.F90
    ${SRC_SHARE}/derivative_mod.F90
    ${SRC_SHARE}/viscosity_mod.F90
    ${SRC_SHARE}/time_mod.F90
    ${SRC_BASE}/common_io_mod.F90
    ${SRC_BASE}/pio_io_mod.F90
    ${SRC_BASE}/netcdf_io_mod.F90
    ${SRC_SHARE}/spacecurve_mod.F90
    ${SRC_SHARE}/cube_mod.F90
    ${SRC_SHARE}/interpolate_mod.F90
    ${SRC_SHARE}/spelt_mod.F90
    ${SRC_SHARE}/fvm_control_volume_mod.F90
    ${SRC_SHARE}/fvm_reconstruction_mod.F90
    ${SRC_SHARE}/fvm_filter_mod.F90
    ${SRC_BASE}/interp_movie_mod.F90
    ${SRC_UTILS}/shr_kind_mod.F90
    ${SRC_UTILS}/shr_mpi_mod.F90
    ${SRC_UTILS}/shr_sys_mod.F90
    ${SRC_UTILS}/shr_file_mod.F90
    ${SRC_UTILS}/shr_vmath_mod.F90
    ${SRC_UTILS}/shr_vmath_fwrap.c
    ${SRC_SHARE}/domain_mod.F90
    ${SRC_BASE}/restart_io_mod.F90
    ${SRC_SHARE}/cg_mod.F90
    ${SRC_SHARE}/linear_algebra_mod.F90
    ${SRC_SHARE}/solver_mod.F90
    ${SRC_SHARE}/filter_mod.F90
    ${SRC_BASE}/dg_flux_mod.F90
    ${SRC_BASE}/dg_core_mod.F90
    ${SRC_BASE}/dg_tests_mod.F90
    ${SRC_BASE}/ref_state_mod.F90
    ${SRC_BASE}/dg_tvdrk_mod.F90
    ${SRC_BASE}/state_mod.F90
    ${SRC_BASE}/dg_sweq_mod.F90
    ${SRC_BASE}/common_movie_mod.F90
    ${SRC_SHARE}/namelist_mod.F90
    ${SRC_SHARE}/mass_matrix_mod.F90
    ${SRC_SHARE}/dof_mod.F90
    ${SRC_SHARE}/perfmodel_mod.F90
    ${SRC_SHARE}/metis_mod.F90
    ${SRC_BASE}/checksum_mod.F90
    ${SRC_BASE}/repro_sum_mod.F90
    ${SRC_BASE}/restart_mod.F90
    ${SRC_BASE}/init_mod.F90
    ${SRC_BASE}/dg_movie_mod.F90
    ${SRC_SHARE}/mesh_mod.F90
)

ADD_LIBRARY(homme_swdgx ${SRCS_SWDGX})
TARGET_LINK_LIBRARIES(homme_swdgx pio timing ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES})

ADD_EXECUTABLE(swdgx ${SRC_BASE}/dg_main.F90)

TARGET_LINK_LIBRARIES(swdgx homme_swdgx)

IF (NOT HOMME_FIND_BLASLAPACK)
  TARGET_LINK_LIBRARIES(swdgx lapack blas)
  ADD_DEPENDENCIES(swdgx blas lapack)
ENDIF()

INSTALL(TARGETS swdgx
        RUNTIME DESTINATION bin)

# Macro to create the individual tests
macro(createSwdgxTest execName macroNP macroPLEV macroUSE_PIO
                               macroWITH_ENERGY)

  ADD_EXECUTABLE(${execName} ${SRCS_SWDGX} ${SRC_BASE}/dg_main.F90)

  SET_TARGET_PROPERTIES(${execName}
                        PROPERTIES COMPILE_DEFINITIONS "NP=${macroNP}")
  SET_TARGET_PROPERTIES(${execName}
                        PROPERTIES COMPILE_DEFINITIONS "PLEV=${macroPLEV}")
  IF (macroUSE_PIO)
    SET_TARGET_PROPERTIES(${execName}
                          PROPERTIES COMPILE_DEFINITIONS "PIO=1")
  ELSE ()
    SET_TARGET_PROPERTIES(${execName}
                          PROPERTIES COMPILE_DEFINITIONS "PIO_INTERP=1")
  ENDIF ()
  IF (macroWITH_ENERGY)
    SET_TARGET_PROPERTIES(${execName}
                          PROPERTIES COMPILE_DEFINITIONS "ENERGY_DIAGNOSTICS=1")
  ENDIF ()

  # Macro
  TARGET_LINK_LIBRARIES(${execName} pio timing ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES})

  IF (NOT HOMME_FIND_BLASLAPACK)
    TARGET_LINK_LIBRARIES(${execName} lapack blas)
    ADD_DEPENDENCIES(${execName} blas lapack)
  ENDIF()

  INSTALL(TARGETS ${execName}
          RUNTIME DESTINATION tests)

endmacro(createSwdgxTest)

# There are only three separate executables that need to be compiled
#   separately
createSwdgxTest(swtc-dgA 6 1 FALSE FALSE)



