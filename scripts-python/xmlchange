#!/usr/bin/env python2

"""
 This utility allows the user to change a env_*xml file via a commandline interface.

 The command is echoed to the CaseStatus file, unless -noecho is given. The
 purpose of this echoing is to provide a "paper trail" of changes made by the
 user, so calls to xmlchange by the cime scripts that are part of the normal case
 setup/build process should generally use -noecho.

"""

from standard_script_setup import *

from CIME.utils import expect, run_cmd
from CIME.case import Case

import argparse, doctest, shutil, glob

###############################################################################
def parse_command_line(args, description):
###############################################################################
    parser = argparse.ArgumentParser(
        usage="""\n%s [<changeargs>] [--verbose][--file file][--id id][--val value][--noecho][--append][--warn]
OR
%s --help
OR
%s --test

\033[1mEXAMPLES:\033[0m
    \033[1;32m# xmlchange REST_OPT=ndays,REST_N=4 \033[0m
    > %s
""" % ((os.path.basename(args[0]), ) * 4),

description=description,

formatter_class=argparse.ArgumentDefaultsHelpFormatter
)

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("listofsettings", nargs="*",
                        help="Comma seperated list of settings in the form: var1=value,var2=value,...")

    parser.add_argument("--caseroot", default=os.getcwd(),
                        help="Case directory to build")

    parser.add_argument("-f", "--file",
                        help="")

    parser.add_argument("-i", "--id",
                        help="")

    parser.add_argument("--val",
                        help="")

    parser.add_argument("--noecho", action="store_true",
                        help="")

    parser.add_argument("--append", action="store_true",
                        help="")

    parser.add_argument("--warn", action="store_true",
                        help="")

    parser.add_argument("--subgroup",
                        help="")

    args = parser.parse_args(args[1:])

    CIME.utils.handle_standard_logging_options(args)

    listofsettings = []
    if( len(args.listofsettings) == 1 ):
        listofsettings = args.listofsettings[0].split(',')

    return args.caseroot, listofsettings, args.file, args.id, args.val, args.subgroup, args.append, args.noecho, args.warn

def xmlchange(caseroot, listofsettings=None, xmlfile=None, xmlid=None, xmlval=None, subgroup=None,
              append=None, noecho=False, warn=None):
    case = Case(caseroot)
#    import pdb
#    pdb.set_trace()
    if(listofsettings ):
        for setting in listofsettings:
            (xmlid, xmlval) = setting.split('=')
            if(append is True):
                value = case.get_value(xmlid, resolved=False, subgroup=subgroup)
                xmlval = "%s %s" %(xmlval, value)
            case.set_value(xmlid, xmlval, subgroup)
    else:
        if(append is True):
            value = case.get_value(xmlid, resolved=False, subgroup=subgroup)
            xmlval = "%s %s" %(xmlval, value)
        case.set_value(xmlid, xmlval, subgroup)
    case.flush()

    if(noecho is False):
        with open("CaseStatus","a") as f:
            argstr = ""
            for arg in sys.argv:
                argstr += "%s "%arg
            f.write("<command> %s </command>" % argstr)

def _main_func(description):
    if ("--test" in sys.argv):
        test_results = doctest.testmod(verbose=True)
        sys.exit(1 if test_results.failed > 0 else 0)

    caseroot, listofsettings, xmlfile, xmlid, xmlval, subgroup, append, noecho, warn = parse_command_line(sys.argv, description)

    xmlchange(caseroot, listofsettings, xmlfile, xmlid, xmlval, subgroup, append, noecho, warn)

if (__name__ == "__main__"):
    _main_func(__doc__)
