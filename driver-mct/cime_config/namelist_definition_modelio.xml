<?xml version="1.0"?>

<?xml-stylesheet type="text/xsl" href="http://www.cgd.ucar.edu/~cam/namelist/namelist_definition.xsl"?>

<namelist_definition version="2.0">

    <!-- Each namelist variable is defined in an <entry> element.  The
     content of the element is the documentation of how the variable is
     used.  Other elements  are:
     id
          The variable's name.  *** N.B. *** The name must be lower case.
          The module convert all namelist variable names to lower case
          since Fortran is case insensitive.
     type
          An abbreviation of the fortran declaration for the variable.
	  Valid declarations are:
             char*n, integer, logical, real
	  Any of these types may be followed by a comma separated list of
	  integers enclosed in parenthesis to indicate an array.
	  The current namelist validation code only distinquishes between
	  string and non-string types.
     input_pathname
          Only include this attribute to indicate that the variable
          contains the pathname of an input dataset that resides in the
          CIME inputdata directory tree.

	  The recognized values are
           "abs"  - an absolute  pathname is required
	   "rel:var_name"  - the  pathname is relative and that
            the namelist variable "var_name" contains the absolute
	    root directory.
           "mapping" - the absolute inputdata path is specified and
            will be included in the cpl.inputdata_list
     category
          A category assigned for organizing the documentation.
     group
          The namelist group that the variable is declared in.
     valid_values
          This is an optional attribute that is mainly useful for variables
          that have only a small number of allowed values.
    -->

  <!-- =========================== -->
  <!-- group pio_inparm               -->
  <!-- =========================== -->

  <entry id="pio_stride">
    <type>integer</type>
    <category>pio</category>
    <group>pio_inparm</group>
    <unmodifiable_via_user_nl>
      must be set via xml variable XXX_PIO_STRIDE, where XXX=[ATM,OCN,ICE,LND,ROF,CPL,GLC,WAV]
    </unmodifiable_via_user_nl>
    <description>
      stride of tasks in pio used generically, component based value takes precedent.
    </description>
    <values>
    <value component="cpl">$CPL_PIO_STRIDE</value>
    <value component="atm">$ATM_PIO_STRIDE</value>
    <value component="lnd">$LND_PIO_STRIDE</value>
    <value component="ocn">$OCN_PIO_STRIDE</value>
    <value component="ice">$ICE_PIO_STRIDE</value>
    <value component="rof">$ROF_PIO_STRIDE</value>
    <value component="glc">$GLC_PIO_STRIDE</value>
    <value component="wav">$WAV_PIO_STRIDE</value>
    <value component="esp">-99</value>
    </values>
  </entry>

  <entry id="pio_root">
    <type>integer</type>
    <category>pio</category>
    <group>pio_inparm</group>
    <unmodifiable_via_user_nl>
      must be set via xml variable XXX_PIO_ROOT, where XXX=[ATM,OCN,ICE,LND,ROF,CPL,GLC,WAV]
    </unmodifiable_via_user_nl>
    <description>
      io task root in pio used generically, component based value takes precedent.
    </description>
    <values>
    <value component="cpl">$CPL_PIO_ROOT</value>
    <value component="atm">$ATM_PIO_ROOT</value>
    <value component="lnd">$LND_PIO_ROOT</value>
    <value component="ocn">$OCN_PIO_ROOT</value>
    <value component="ice">$ICE_PIO_ROOT</value>
    <value component="rof">$ROF_PIO_ROOT</value>
    <value component="glc">$GLC_PIO_ROOT</value>
    <value component="wav">$WAV_PIO_ROOT</value>
    <value component="esp">-99</value>
    </values>
  </entry>

  <entry id="pio_rearranger">
    <type>integer</type>
    <category>pio</category>
    <group>pio_inparm</group>
    <unmodifiable_via_user_nl>
      must be set via xml variable XXX_PIO_REARRANGER, where XXX=[ATM,OCN,ICE,LND,ROF,CPL,GLC,WAV]
    </unmodifiable_via_user_nl>
    <valid_values>-99,1,2</valid_values>
    <description>
      Rearranger method for pio 1=box, 2=subset.
    </description>
    <values>
    <value component="cpl">$CPL_PIO_REARRANGER</value>
    <value component="atm">$ATM_PIO_REARRANGER</value>
    <value component="lnd">$LND_PIO_REARRANGER</value>
    <value component="ocn">$OCN_PIO_REARRANGER</value>
    <value component="ice">$ICE_PIO_REARRANGER</value>
    <value component="rof">$ROF_PIO_REARRANGER</value>
    <value component="glc">$GLC_PIO_REARRANGER</value>
    <value component="wav">$WAV_PIO_REARRANGER</value>
    <value component="esp">-99</value>
    </values>
  </entry>

  <entry id="pio_numiotasks">
    <type>integer</type>
    <category>pio</category>
    <group>pio_inparm</group>
    <unmodifiable_via_user_nl>
      must be set via xml variable XXX_PIO_NUMTASKS, where XXX=[ATM,OCN,ICE,LND,ROF,CPL,GLC,WAV]
    </unmodifiable_via_user_nl>
    <description>
      number of io tasks in pio used generically, component based value takes precedent.
    </description>
    <values>
    <value component="cpl">$CPL_PIO_NUMTASKS</value>
    <value component="atm">$ATM_PIO_NUMTASKS</value>
    <value component="lnd">$LND_PIO_NUMTASKS</value>
    <value component="ocn">$OCN_PIO_NUMTASKS</value>
    <value component="ice">$ICE_PIO_NUMTASKS</value>
    <value component="rof">$ROF_PIO_NUMTASKS</value>
    <value component="glc">$GLC_PIO_NUMTASKS</value>
    <value component="wav">$WAV_PIO_NUMTASKS</value>
    <value component="esp">-99</value>
    </values>
  </entry>

  <entry id="pio_typename">
    <type>char*64</type>
    <category>pio</category>
    <group>pio_inparm</group>
    <valid_values>netcdf,pnetcdf,netcdf4p,netcdf4c,default</valid_values>
    <unmodifiable_via_user_nl>
      must be set via xml variable XXX_PIO_TYPENAME, where XXX=[ATM,OCN,ICE,LND,ROF,CPL,GLC,WAV]
    </unmodifiable_via_user_nl>
    <description>
      io type in pio used generically, component based value takes precedent.
      valid values: netcdf, pnetcdf, netcdf4p, netcdf4c, default
    </description>
    <values>
    <value component="cpl">$CPL_PIO_TYPENAME</value>
    <value component="atm">$ATM_PIO_TYPENAME</value>
    <value component="lnd">$LND_PIO_TYPENAME</value>
    <value component="ocn">$OCN_PIO_TYPENAME</value>
    <value component="ice">$ICE_PIO_TYPENAME</value>
    <value component="rof">$ROF_PIO_TYPENAME</value>
    <value component="glc">$GLC_PIO_TYPENAME</value>
    <value component="wav">$WAV_PIO_TYPENAME</value>
    <value component="esp">nothing</value>
    </values>
  </entry>

  <!-- =========================== -->
  <!-- group modelio               -->
  <!-- =========================== -->

  <entry id="diri">
    <type>char*256</type>
    <category>modelio</category>
    <group>modelio</group>
    <description>input directory (no longer needed)</description>
    <values>
      <value>UNSET</value>
    </values>
  </entry>

  <entry id="diro">
    <type>char*256</type>
    <category>modelio</category>
    <group>modelio</group>
    <description>directory for output log files</description>
    <values>
      <value>UNSET</value>
    </values>
  </entry>

  <entry id="logfile">
    <type>char*256</type>
    <category>modelio</category>
    <group>modelio</group>
    <description>name of component output log file</description>
    <values>
    <value>UNSET</value>
    </values>
  </entry>

</namelist_definition>
