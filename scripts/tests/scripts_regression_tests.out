
Testing commit 21b97777a89712a34ad9a76b3d16d9a93affd166
Using cime_model = cesm
Testing machine = cheyenne
Test root: /glade/scratch/fischer/scripts_regression_test.20170728_112705

test_CIMEXML_doctests (__main__.A_RunUnitTests) ... ok
test_CIME_doctests (__main__.A_RunUnitTests) ... ok
test_resolve_variable_name (__main__.A_RunUnitTests) ... ok
test_unittests (__main__.A_RunUnitTests) ... .................
----------------------------------------------------------------------
Ran 17 tests in 0.107s

OK
ok
test_script_is_callable (__main__.G_TestMacrosBasic)
The test script can be called on valid output without dying. ... ok
test_script_rejects_bad_build_system (__main__.G_TestMacrosBasic)
The macro writer rejects a bad build system string. ... ok
test_script_rejects_bad_xml (__main__.G_TestMacrosBasic)
The macro writer rejects input that's not valid XML. ... ok
test_append_flags (__main__.H_TestMakeMacros)
Test appending flags to a list. ... ok
test_append_flags_without_base (__main__.H_TestMakeMacros)
Test appending flags to a value set before Macros is included. ... ok
test_base_flags (__main__.H_TestMakeMacros)
Test that we get "base" compiler flags. ... ok
test_build_time_append_flags (__main__.H_TestMakeMacros)
Test build_time selection of compiler flags. ... ok
test_build_time_attribute (__main__.H_TestMakeMacros)
The macro writer writes conditionals for build-time choices. ... ok
test_build_time_base_flags (__main__.H_TestMakeMacros)
Test selection of base flags based on build-time attributes. ... ok
test_build_time_base_flags_same_parent (__main__.H_TestMakeMacros)
Test selection of base flags in the same parent element. ... ok
test_compiler_changeable_at_build_time (__main__.H_TestMakeMacros)
The macro writer writes information for multiple compilers. ... ok
test_config_reject_cyclical_references (__main__.H_TestMakeMacros)
Test that cyclical <var> references are rejected. ... ok
test_config_reject_self_references (__main__.H_TestMakeMacros)
Test that <var> self-references are rejected. ... ok
test_config_variable_insertion (__main__.H_TestMakeMacros)
Test that <var> elements insert variables from config_build. ... ok
test_env_and_shell_command (__main__.H_TestMakeMacros)
Test that <env> elements work inside <shell> elements. ... ok
test_environment_variable_insertion (__main__.H_TestMakeMacros)
Test that <env> elements insert environment variables. ... ok
test_generic_item (__main__.H_TestMakeMacros)
The macro writer can write out a single generic item. ... ok
test_ignore_non_match (__main__.H_TestMakeMacros)
The macro writer ignores an entry with the wrong machine name. ... ok
test_mach_and_os_beats_mach (__main__.H_TestMakeMacros)
The macro writer chooses the most-specific match possible. ... ok
test_mach_beats_os (__main__.H_TestMakeMacros)
The macro writer chooses machine-specific over os-specific matches. ... ok
test_machine_specific_append_flags (__main__.H_TestMakeMacros)
Test appending flags that are either more or less machine-specific. ... ok
test_machine_specific_base_and_append_flags (__main__.H_TestMakeMacros)
Test that machine-specific base flags coexist with machine-specific append flags. ... ok
test_machine_specific_base_flags (__main__.H_TestMakeMacros)
Test selection among base compiler flag sets based on machine. ... ok
test_machine_specific_base_over_append_flags (__main__.H_TestMakeMacros)
Test that machine-specific base flags override default append flags. ... ok
test_machine_specific_item (__main__.H_TestMakeMacros)
The macro writer can pick out a machine-specific item. ... ok
test_multiple_shell_commands (__main__.H_TestMakeMacros)
Test that more than one <shell> element can be used. ... ok
test_os_specific_item (__main__.H_TestMakeMacros)
The macro writer can pick out an OS-specific item. ... ok
test_reject_ambiguous (__main__.H_TestMakeMacros)
The macro writer dies if given an ambiguous set of matches. ... ok
test_reject_duplicate_defaults (__main__.H_TestMakeMacros)
The macro writer dies if given many defaults. ... ok
test_reject_duplicates (__main__.H_TestMakeMacros)
The macro writer dies if given many matches for a given configuration. ... ok
test_shell_command_insertion (__main__.H_TestMakeMacros)
Test that <shell> elements insert shell command output. ... ok
test_variable_insertion_with_machine_specific_setting (__main__.H_TestMakeMacros)
Test that machine-specific <var> dependencies are correct. ... ok
test_append_flags (__main__.I_TestCMakeMacros)
Test appending flags to a list. ... ok
test_append_flags_without_base (__main__.I_TestCMakeMacros)
Test appending flags to a value set before Macros is included. ... ok
test_base_flags (__main__.I_TestCMakeMacros)
Test that we get "base" compiler flags. ... ok
test_build_time_append_flags (__main__.I_TestCMakeMacros)
Test build_time selection of compiler flags. ... ok
test_build_time_attribute (__main__.I_TestCMakeMacros)
The macro writer writes conditionals for build-time choices. ... ok
test_build_time_base_flags (__main__.I_TestCMakeMacros)
Test selection of base flags based on build-time attributes. ... ok
test_build_time_base_flags_same_parent (__main__.I_TestCMakeMacros)
Test selection of base flags in the same parent element. ... ok
test_compiler_changeable_at_build_time (__main__.I_TestCMakeMacros)
The macro writer writes information for multiple compilers. ... ok
test_config_reject_cyclical_references (__main__.I_TestCMakeMacros)
Test that cyclical <var> references are rejected. ... ok
test_config_reject_self_references (__main__.I_TestCMakeMacros)
Test that <var> self-references are rejected. ... ok
test_config_variable_insertion (__main__.I_TestCMakeMacros)
Test that <var> elements insert variables from config_build. ... ok
test_env_and_shell_command (__main__.I_TestCMakeMacros)
Test that <env> elements work inside <shell> elements. ... ok
test_environment_variable_insertion (__main__.I_TestCMakeMacros)
Test that <env> elements insert environment variables. ... ok
test_generic_item (__main__.I_TestCMakeMacros)
The macro writer can write out a single generic item. ... ok
test_ignore_non_match (__main__.I_TestCMakeMacros)
The macro writer ignores an entry with the wrong machine name. ... ok
test_mach_and_os_beats_mach (__main__.I_TestCMakeMacros)
The macro writer chooses the most-specific match possible. ... ok
test_mach_beats_os (__main__.I_TestCMakeMacros)
The macro writer chooses machine-specific over os-specific matches. ... ok
test_machine_specific_append_flags (__main__.I_TestCMakeMacros)
Test appending flags that are either more or less machine-specific. ... ok
test_machine_specific_base_and_append_flags (__main__.I_TestCMakeMacros)
Test that machine-specific base flags coexist with machine-specific append flags. ... ok
test_machine_specific_base_flags (__main__.I_TestCMakeMacros)
Test selection among base compiler flag sets based on machine. ... ok
test_machine_specific_base_over_append_flags (__main__.I_TestCMakeMacros)
Test that machine-specific base flags override default append flags. ... ok
test_machine_specific_item (__main__.I_TestCMakeMacros)
The macro writer can pick out a machine-specific item. ... ok
test_multiple_shell_commands (__main__.I_TestCMakeMacros)
Test that more than one <shell> element can be used. ... ok
test_os_specific_item (__main__.I_TestCMakeMacros)
The macro writer can pick out an OS-specific item. ... ok
test_reject_ambiguous (__main__.I_TestCMakeMacros)
The macro writer dies if given an ambiguous set of matches. ... ok
test_reject_duplicate_defaults (__main__.I_TestCMakeMacros)
The macro writer dies if given many defaults. ... ok
test_reject_duplicates (__main__.I_TestCMakeMacros)
The macro writer dies if given many matches for a given configuration. ... ok
test_shell_command_insertion (__main__.I_TestCMakeMacros)
Test that <shell> elements insert shell command output. ... ok
test_variable_insertion_with_machine_specific_setting (__main__.I_TestCMakeMacros)
Test that machine-specific <var> dependencies are correct. ... ok
test_a_createnewcase (__main__.J_TestCreateNewcase) ... ok
test_aa_no_flush_on_instantiate (__main__.J_TestCreateNewcase) ... ok
test_b_user_mods (__main__.J_TestCreateNewcase) ... ok
test_c_create_clone_keepexe (__main__.J_TestCreateNewcase) ... ok
test_d_create_clone_new_user (__main__.J_TestCreateNewcase) ... ok
test_e_xmlquery (__main__.J_TestCreateNewcase) ... ok
test_f_createnewcase_with_user_compset (__main__.J_TestCreateNewcase) ... ok
test_g_createnewcase_with_user_compset_and_env_mach_pes (__main__.J_TestCreateNewcase) ... ok
test_h_primary_component (__main__.J_TestCreateNewcase) ... ok
test_cime_case (__main__.K_TestCimeCase) ... ok
test_cime_case_build_threaded_1 (__main__.K_TestCimeCase) ... ok
test_cime_case_build_threaded_2 (__main__.K_TestCimeCase) ... ok
test_cime_case_force_pecount (__main__.K_TestCimeCase) ... ok
test_cime_case_mpi_serial (__main__.K_TestCimeCase) ... ok
test_cime_case_test_walltime_mgmt_1 (__main__.K_TestCimeCase) ... skipped 'Skipping walltime test. Depends on ACME batch settings'
test_cime_case_test_walltime_mgmt_2 (__main__.K_TestCimeCase) ... skipped 'Skipping walltime test. Depends on ACME batch settings'
test_cime_case_test_walltime_mgmt_3 (__main__.K_TestCimeCase) ... skipped 'Skipping walltime test. Depends on ACME batch settings'
test_cime_case_test_walltime_mgmt_4 (__main__.K_TestCimeCase) ... skipped 'Skipping walltime test. Depends on ACME batch settings'
test_cime_case_test_walltime_mgmt_5 (__main__.K_TestCimeCase) ... skipped 'Skipping walltime test. Depends on ACME batch settings'
test_cime_case_xmlchange_append (__main__.K_TestCimeCase) ... ok
test_create_test_longname (__main__.K_TestCimeCase) ... ok
test_save_timings (__main__.L_TestSaveTimings) ... ok
test_save_timings_manual (__main__.L_TestSaveTimings) ... ok
test_wait_for_test_all_pass (__main__.M_TestWaitForTests) ... ok
test_wait_for_test_cdash_kill (__main__.M_TestWaitForTests) ... ok
test_wait_for_test_cdash_pass (__main__.M_TestWaitForTests) ... ok
test_wait_for_test_no_wait (__main__.M_TestWaitForTests) ... ok
test_wait_for_test_wait_for_missing_run_phase (__main__.M_TestWaitForTests) ... ok
test_wait_for_test_wait_for_pend (__main__.M_TestWaitForTests) ... ok
test_wait_for_test_wait_kill (__main__.M_TestWaitForTests) ... ok
test_wait_for_test_with_fail (__main__.M_TestWaitForTests) ... ok
test_a_unit_test (__main__.N_TestUnitTest) ... ok
test_b_cime_f90_unit_tests (__main__.N_TestUnitTest) ... ok
test_a_phases (__main__.O_TestTestScheduler) ... ok
test_b_full (__main__.O_TestTestScheduler) ... ok
test_c_use_existing (__main__.O_TestTestScheduler) ... ok
test_jenkins_generic_job (__main__.P_TestJenkinsGenericJob) ... skipped 'Skipping Jenkins tests. ACME feature'
test_jenkins_generic_job_kill (__main__.P_TestJenkinsGenericJob) ... skipped 'Skipping Jenkins tests. ACME feature'
test_bless_test_results (__main__.Q_TestBlessTestResults) ... ok
test_rebless_namelist (__main__.Q_TestBlessTestResults) ... ok
test_update_acme_tests (__main__.R_TestUpdateACMETests) ... skipped 'Disabling this test until we figure out how to integrate ACME tests and CIME xml files.'
test_update_acme_tests_test_mods (__main__.R_TestUpdateACMETests) ... skipped 'Disabling this test until we figure out how to integrate ACME tests and CIME xml files.'
test_query_testlists_count_runs (__main__.S_TestManageAndQuery)
Make sure that query_testlists runs successfully with the --count argument ... ok
test_query_testlists_list_runs (__main__.S_TestManageAndQuery)
Make sure that query_testlists runs successfully with the --list argument ... ok
test_query_testlists_runs (__main__.S_TestManageAndQuery)
Make sure that query_testlists runs successfully ... ok
test_run_restart (__main__.T_TestRunRestart) ... ok
test_run_restart_too_many_fails (__main__.T_TestRunRestart) ... ok
test_single_submit (__main__.X_TestSingleSubmit) ... skipped 'Skipping single submit. ACME experimental feature'
test_full_system (__main__.Z_FullSystemTest) ... ok

----------------------------------------------------------------------
Ran 114 tests in 3437.734s

OK (skipped=10)
pylint version 1.5 or newer not found, pylint tests skipped
Detected failed test or user request no teardown
Leaving files:
Detected failed test or user request no teardown
Leaving files:
Detected failed test or user request no teardown
Leaving files:
Detected failed test or user request no teardown
Leaving files:
Detected failed test or user request no teardown
Leaving files:
Detected failed test or user request no teardown
Leaving files:
All pass, removing directory: /glade/scratch/fischer/scripts_regression_test.20170728_112705
