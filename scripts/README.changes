1) The following xml format exists for the following files in scripts/cimeconfig

   files_compset_spec.xml 
     Filenames for determining compsets and tests file (Depends on component attribute value)   

   files_component_spec.xml - spec
     File names for all component specific configuration variables

  <entry id=""> 
    <type></type>
    <values >
       <value component=""></value>
       .....
    </values>
    <group></group>
    <file></file>
    <desc></desc>
  </entry>

2) The following xml format exists for the following files in scripts/cimeconfig

   files_general_spec.xml
     File and directory names for caseroot, srcroot, cimeroot, machines, pio and grids

  <entry id=""> 
    <type></type>
    <value></value>
    <valid_values></valid_values> (optional)
    <group></group>
    <file></file>
    <desc></desc>
  </entry>

3) The following xml format exists for the following files in scripts/cimeconfig 

   definitions_archive.xml
   definitions_build.xml
   definitions_case.xml
   definitions_cost.xml
   definitions_grid.xml
   definitions_machines.xml
   definitions_performance.xml
   definitions_pes.xml
   definitions_pio.xml
   definitions_postproc.xml
   definitions_runtimes.xml
   definitions_testing.xml

  <entry id=""> 
    <type></type>
    <value></value>
    <valid_values></valid_values> (optional)
    <group></group>
    <file></file>
    <desc></desc>
  </entry>


----------------------------------------------------------
create_newcase logic
----------------------------------------------------------

# *** Check input options

# *** Determine user_mods_dir

# *** Create empty new config object ***

# *** Create all values in $cfg_ref that are not component specific
      $file = $cimeroot/scripts/cimeconfig/files_general_spec.xml
      call  $cfg_ref->add_file_general_spec_variables($file...)   

# *** Determine grid specs file

# *** Options for listing (exit after listing) 

# *** Read the file that determines the possible compsets 
      $file = "$cimeroot/scripts/cimeconfig/files_compset_spec.xml"
      $primary_component = ConfigCESM::getPrimaryComponent($compset);
      $cfg_ref->add_file_compset_spec_variables($file, $cimeroot, $srcroot, $primary_component);

# *** Determine the full pathnames of all definition files for each compset component
       ConfigCompsetGrid::getCompsetLongname($compsets_file, $compset, $opts{'user_compset'});  
       $file = "$cimeroot/scripts/cimeconfig/files_component_spec.xml";
       $cfg_ref->add_file_component_spec_variables($file, $cimeroot, $srcroot, \@compset_components);
   
# *** Determine grid longname 
       ConfigCompsetGrid::getGridLongname($cfg_ref, $grid); 

# *** Determine the cfg_ref variables for the specified compset and grid  ***
      ConfigCompsetGrid::setCompsetGrid($print, $cfg_ref);

# *** Inform the user of the current support level for the compset they are attempting to run.

# *** Determine machines file specifying set of out-of-the box machines and then
      set the machine parameters, including compilers

# *** Set the testname parameters

# *** Set the input configure options if appropriate and also some additional $cfg_ref variables

# *** Set the project id

# *** Set the case pe-layout

# *** Set the mpi library and the repotag

# *** Set the sharedlibroot for building shared CESM components

# *** Create the caseroot directory tree and all caseroot required fiels


