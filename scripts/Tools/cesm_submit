#!/usr/bin/env perl 

use strict;
use warnings;
use Data::Dumper;
use XML::LibXML;

my $xml = XML::LibXML->new( no_blanks => 1)->parse_file("env_case.xml"); 
my @nodes = $xml->findnodes(".//entry[\@id=\"CIMEROOT\"]"); 
my $cimeroot = $nodes[0]->getAttribute('value');

unshift @INC, "$cimeroot/utils/perl5lib";
require Config::SetupTools;
require Batch::BatchUtils;
require Module::ModuleLoader;

my %config	= SetupTools::getAllResolved();
my $machine	= $config{'MACH'};
my $machroot	= $config{'MACHDIR'};
my $compiler	= $config{'COMPILER'};
my $mpilib	= $config{'MPILIB'};
my $caseroot	= $config{'CASEROOT'};
my $case	= $config{'CASE'};

my $lastjobid = undef;

sub main
{
    # Check the case only once..
    print "checking the case..\n";
    open(my $CHECKCASE, "-|", "./check_case");
    while(<$CHECKCASE>)
    {
	print "$_";
    }
    close $CHECKCASE;
    if($?)
    {
        print "check_case failed\n";
        exit(-1);
    }
    
    my $moduleloader = new Module::ModuleLoader(machine	    => $config{'MACH'}, 
						compiler    => $config{'COMPILER'},
						mpilib	    => $config{'MPILIB'}, 
						debug	    => $config{'DEBUG'},
						caseroot    => $config{'CASEROOT'});
    $moduleloader->loadModules();

    #my $batchutils = new Batch::BatchUtils(machine => $machine, machroot => $machroot, caseconfig => \%config);
    my $batchutils = Batch::BatchUtilsFactory::getBatchUtils( case	   => $case, 
							      caseconfig   => \%config, 
							      caseroot	   => $caseroot, 
							      compiler	   => $compiler, 
							      machine	   => $machine, 
							      machroot	   => $machroot, 
							      mpilib	   => $mpilib); 
    
    $batchutils->dependencyCheck("sta_ok");
    $batchutils->submitJobs("sta_ok");
}

main(@ARGV) unless caller();
